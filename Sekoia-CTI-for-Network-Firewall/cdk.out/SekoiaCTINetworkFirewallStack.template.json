{
 "Parameters": {
  "APIKEYParameter": {
   "Type": "String",
   "Description": "Please enter the SEKOIA.IO API KEY. It is provided by SEKOIA.IO at subscription."
  }
 },
 "Resources": {
  "SEKOIACTIBucket": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccessControl": "Private",
    "BucketName": "sekoia-cti-network-firewall",
    "NotificationConfiguration": {
     "EventBridgeConfiguration": {
      "EventBridgeEnabled": true
     }
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/SEKOIA_CTI_Bucket"
   }
  },
  "CopySekoiaLambdaNetworkFirewallRole": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       },
       "Action": "sts:AssumeRole"
      }
     ]
    },
    "Description": "This role is specific to lambda function named CopySekoiaLambdaNetworkFirewall. It allows to write logs, to RW on a specific bucket.",
    "RoleName": "CopySekoiaLambdaNetworkFirewallRole"
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/CopySekoiaLambdaNetworkFirewallRole"
   }
  },
  "CopySekoiaLambdaNetworkFirewallPolicy": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/lambda/*"
         ]
        ]
       }
      },
      {
       "Effect": "Allow",
       "Action": [
        "s3:GetObject",
        "s3:PutObject"
       ],
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "SEKOIACTIBucket",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ]
    },
    "PolicyName": "CopySekoiaLambdaNetworkFirewallPolicy",
    "Roles": [
     "CopySekoiaLambdaNetworkFirewallRole"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/CopySekoiaLambdaNetworkFirewallPolicy"
   }
  },
  "UpdateSekoiaCTINetworkFirewallRole": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       },
       "Action": "sts:AssumeRole"
      }
     ]
    },
    "Description": "This role is specific to lambda function named UpdateSekoiaCTIForNetworkFirewall. It allows to write logs, to update Firewall Network Rule Groups.",
    "RoleName": "UpdateSekoiaCTINetworkFirewallRole"
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/UpdateSekoiaCTINetworkFirewallRole"
   }
  },
  "UpdateSekoiaCTINetworkFirewallPolicy": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Effect": "Allow",
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:logs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":log-group:/aws/lambda/*"
         ]
        ]
       }
      },
      {
       "Effect": "Allow",
       "Action": [
        "network-firewall:DescribeRuleGroup",
        "network-firewall:UpdateRuleGroup"
       ],
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:network-firewall:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":stateful-rulegroup/*"
         ]
        ]
       }
      }
     ]
    },
    "PolicyName": "UpdateSekoiaCTINetworkFirewallPolicy",
    "Roles": [
     "UpdateSekoiaCTINetworkFirewallRole"
    ]
   },
   "DependsOn": [
    "UpdateSekoiaCTINetworkFirewallRole"
   ],
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/UpdateSekoiaCTINetworkFirewallPolicy"
   }
  },
  "SekoiaNetworkFirewallRuleGroup": {
   "Type": "AWS::NetworkFirewall::RuleGroup",
   "Properties": {
    "Capacity": 30000,
    "RuleGroupName": "SekoiaCTIDomainNameRuleGroup",
    "Type": "STATEFUL",
    "RuleGroup": {
     "RulesSource": {
      "RulesSourceList": {
       "GeneratedRulesType": "DENYLIST",
       "TargetTypes": [
        "TLS_SNI",
        "HTTP_HOST"
       ],
       "Targets": [
        "example.com"
       ]
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/SekoiaNetworkFirewallRuleGroup"
   }
  },
  "SekoiaNetworkFirewallPolicy": {
   "Type": "AWS::NetworkFirewall::FirewallPolicy",
   "Properties": {
    "FirewallPolicy": {
     "StatefulRuleGroupReferences": [
      {
       "ResourceArn": {
        "Fn::GetAtt": [
         "SekoiaNetworkFirewallRuleGroup",
         "RuleGroupArn"
        ]
       }
      }
     ],
     "StatelessDefaultActions": [
      "aws:forward_to_sfe"
     ],
     "StatelessFragmentDefaultActions": [
      "aws:forward_to_sfe"
     ]
    },
    "FirewallPolicyName": "SekoiaNetworkFirewallPolicy"
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/SekoiaNetworkFirewallPolicy"
   }
  },
  "CopySEKOIALambdaGuardDuty": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nimport boto3\nimport requests\nimport os\nBUCKET_NAME = os.environ.get(\"BUCKET_NAME\")\ndef handler(event, context):\n    r = requests.get(\"https://raw.githubusercontent.com/maxime-el-haddari/testing-lambda/main/sekoia-update-cti-network-firewall.zip\")\n    with open(\"/tmp/sekoia-update-cti-network-firewall.zip\", \"wb\") as f:\n        f.write(r.content)\n    s3_client = boto3.client(\"s3\")\n    s3_client.upload_file(\"/tmp/sekoia-update-cti-network-firewall.zip\", BUCKET_NAME, \"sekoia-update-cti-network-firewall.zip\")\n            "
    },
    "Role": {
     "Fn::GetAtt": [
      "CopySekoiaLambdaNetworkFirewallRole",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": "sekoia-cti-network-firewall"
     }
    },
    "FunctionName": "CopySekoiaLambdaNetworkFirewall",
    "Handler": "index.handler",
    "PackageType": "Zip",
    "Runtime": "python3.7",
    "Timeout": 10
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/CopySEKOIALambdaGuardDuty"
   }
  },
  "UpdateSEKOIACTINetworkFirewall": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "sekoia-cti-network-firewall",
     "S3Key": "sekoia-update-cti-network-firewall.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "UpdateSekoiaCTINetworkFirewallRole",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "API_KEY": {
       "Ref": "APIKEYParameter"
      }
     }
    },
    "FunctionName": "UpdateSekoiaCTINetworkFirewall",
    "Handler": "app.handler",
    "PackageType": "Zip",
    "Runtime": "python3.7",
    "Timeout": 30
   },
   "DependsOn": [
    "invokelambdaCustomResourcePolicyD9F1A682",
    "invokelambda131C9579"
   ],
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/UpdateSEKOIACTINetworkFirewall"
   }
  },
  "invokelambda131C9579": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": "{\"action\":\"invoke\",\"service\":\"Lambda\",\"parameters\":{\"FunctionName\":\"CopySekoiaLambdaNetworkFirewall\",\"InvocationType\":\"Event\"},\"physicalResourceId\":{\"id\":\"JobSenderTriggerPhysicalId\"}}",
    "Update": "{\"action\":\"invoke\",\"service\":\"Lambda\",\"parameters\":{\"FunctionName\":\"CopySekoiaLambdaNetworkFirewall\",\"InvocationType\":\"Event\"},\"physicalResourceId\":{\"id\":\"JobSenderTriggerPhysicalId\"}}",
    "InstallLatestAwsSdk": true
   },
   "DependsOn": [
    "invokelambdaCustomResourcePolicyD9F1A682"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/invoke_lambda/Resource/Default"
   }
  },
  "invokelambdaCustomResourcePolicyD9F1A682": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CopySEKOIALambdaGuardDuty",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "invokelambdaCustomResourcePolicyD9F1A682",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/invoke_lambda/CustomResourcePolicy/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "FunctionName": "CopyLambdaNetworkFirewallEvent",
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 900
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SEKOIALambdaScheduler": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Schedule rule to trigger Lambda UpdateSekoiaCTINetworkFirewall",
    "Name": "SEKOIALambdaSchedulerNetworkFirewall",
    "ScheduleExpression": "rate(10 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "UpdateSEKOIACTINetworkFirewall",
        "Arn"
       ]
      },
      "Id": "UpdateSekoiaCTINetworkFirewall"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/SEKOIALambdaScheduler"
   }
  },
  "LambdaPermissionInvoke": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": "UpdateSekoiaCTINetworkFirewall",
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "SEKOIALambdaScheduler",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "SekoiaCTINetworkFirewallStack/LambdaPermissionInvoke"
   }
  }
 }
}